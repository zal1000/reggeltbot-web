
// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@import '~@angular/material/theming';
// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat-core();

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
$my-app-primary: mat-palette($mat-indigo);
$my-app-accent: mat-palette($mat-pink, A200, A100, A400);

// The warn palette is optional (defaults to red).
$my-app-warn: mat-palette($mat-red);

// Create the theme object. A theme consists of configurations for individual
// theming systems such as "color" or "typography".
$my-app-theme: mat-light-theme((
  color: (
    primary: $my-app-primary,
    accent: $my-app-accent,
    warn: $my-app-warn,
  )
));

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.

@include angular-material-theme($my-app-theme);

 $spinner: #1976D2;
 $background: #23272A;
 $size: 200px;
 
@import url("https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css");

body {
  background-color: #23272A;
}
.spinner {
  position: absolute;
  top: calc(50% - #{$size / 2});
  left: calc(50% - #{$size / 2});
  width: $size;
  height: $size;
  animation: spinner 0.75s linear infinite;

  span {
    position: absolute;
    width: 100%;
    height: 100%;
    border-radius: 50%;
  }
  
  .spinner-inner-1 {
    background: linear-gradient(to right, rgba($spinner,0) 0%,rgba($spinner,0) 50%,$spinner 51%);
  }
  
  .spinner-inner-2 {
    background: linear-gradient(to top, rgba($background,0) 0%,$background 100%);
  }
  
  .spinner-inner-3 {
    $offset: $size * 0.1;
    top: $offset;
    left: $offset;
    width: $size - ($offset * 2);
    height: $size - ($offset * 2);
    background: $background;
  }
}

@keyframes spinner {
  0% { transform: rotate(0deg); }
  100% { transform: rotate(360deg); }
}
html, body { height: 100%; }
body { margin: 0; font-family: Roboto, "Helvetica Neue", sans-serif; }

/* For use in src/lib/core/theming/_palette.scss */
$md-mcgpalette1: (
    50 : #e3effa,
    100 : #bad6f2,
    200 : #8cbbe9,
    300 : #5e9fe0,
    400 : #3c8bd9,
    500 : #1976d2,
    600 : #166ecd,
    700 : #1263c7,
    800 : #0e59c1,
    900 : #0846b6,
    A100 : #e0eaff,
    A200 : #adc6ff,
    A400 : #7aa3ff,
    A700 : #6191ff,
    contrast: (
        50 : #000000,
        100 : #000000,
        200 : #000000,
        300 : #000000,
        400 : #ffffff,
        500 : #ffffff,
        600 : #ffffff,
        700 : #ffffff,
        800 : #ffffff,
        900 : #ffffff,
        A100 : #000000,
        A200 : #000000,
        A400 : #000000,
        A700 : #000000,
    )
);

.dropzone { 
  display: flex;
  align-items: center;
  justify-content: center;
  flex-direction: column; 
  min-width: 80vw;
  font-weight: 200;
  height: 300px;
  border: 2px dashed #f16624;
  border-radius: 5px;
  background: white;
  margin: 10px 0;

  &.hovering {
      border: 2px solid #f16624;
      color: #dadada !important;
  }

  .file-label {
      font-size: 1.2em;
  }
}

progress::-webkit-progress-value {
  transition: width 0.1s ease;
}

/* $my-app-primary: mat-palette($md-mcgpalette1) */
